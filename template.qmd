---
title: "Lab 4: House Elevation NPV Analysis"
author: "Jonathan Gan wg18"
jupyter: julia-1.10
date: 2024-02-08
week: 5
categories: [Lab]

format: 
    html: default

    # YOU DO NOT NEED BOTH PDF AND DOCX.
    # COMMENT OR DELETE THE ONE YOU DON'T WANT TO USE.
    pdf:
        documentclass: article
        fontsize: 11pt
        geometry:
            - margin=1in  
        number-sections: true
        code-line-numbers: true
    #docx: 
    #    toc: true
    #    fig-format: png
    #    number-sections: true
    #    code-line-numbers: true

# these are optional
# if you have cache=true, you'll need the jupyter-cache package installed
execute: 
  cache: true
  freeze: true

date-format: "ddd., MMM. D"
bibliography: references.bib
---

```{julia}
#| output: false
using CSV
using DataFrames
using DataFramesMeta
using Distributions
using Interpolations
using Plots
using StatsPlots
using Unitful

Plots.default(; margin=6Plots.mm)

include("depthdamage.jl")
```

# Depth damage function
```{julia}
haz_fl_dept = CSV.read("data/haz_fl_dept.csv", DataFrame)
include("depthdamage.jl")
row = @rsubset(
    haz_fl_dept, :Description == "Average Retail, Structure"
)[
    1, :,
]
dd = DepthDamageData(row)
damage_fn = get_depth_damage_function(dd.depths, dd.damages)
```

# Single year function
```{julia}
function single_year_cost_benefit(flood_dist, damage_fn, elevation_cost, house_area, house_value, Δh)
    
    # calculate the expected damages
    c_dmg = ...

    # calculate the cost of elevating
    c_constr = ...

    # return the total cost and benefit
    return -c_constr - c_dmg
end

```

# NPV function
```{julia}
function npv_cost_benefit(flood_dist, damage_fn, elevation_cost, house_area, house_value, Δh, T, discount_rate)
    # calculate the costs and benefits for each year, and then discount
    # see above!
    return npv
end

```


# One SOW, several actions
```{julia}

```

# Sensitivity test
```{julia}

```

# Discussion